name: Docker

on:
  push:
    # Publish `$default-branch` as Docker `latest` image.
    branches:
      - $default-branch

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # to test if it works
  pull_request:

env:
  IMAGE_NAME: grofer

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest
    # TODO: enable this later
    # if: github.event_name == 'push'

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push image
        run: |
          # repo owner - converted to lowercase
          OWNER=$(echo "${{ github.repository_owner }}" | tr "[:upper:]" "[:lower:]")

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # if it's a PR, use `pr-<PR number>` as the tag
          [[ "${{ github.ref }}" == "refs/pull/"* ]] && VERSION="pr-${{ github.event.number }}"
          # Use Docker `latest` tag convention
          [ "$VERSION" == "$default-branch" ] && VERSION=latest

          IMAGE_ID="ghcr.io/${OWNER}/${IMAGE_NAME}:${VERSION}"
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID
          docker push $IMAGE_ID
